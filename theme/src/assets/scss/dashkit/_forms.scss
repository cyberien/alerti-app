//
// forms.scss
// Extended from Bootstrap
//


//
// Bootstrap Overrides ===================================
//

// Help text

.form-text {
  margin-top: 0;
  margin-bottom: $label-margin-bottom;
}

// Read only

.form-control[readonly="readonly"] {
  background-color: $input-bg;
}


//
// Dashkit ===================================
//

// Form control flush
//
// Removes borders and paddings from inputs and text areas

.form-control-flush {
  padding: 0;
  border-width: 0;
}


// Form control rounded
//
// Makes input border radius round

.form-control-rounded {
  border-radius: 20rem;
}


// Input group merge
//
// Makes input group text and form control visually the same element

.input-group.input-group-merge {

  > .form-control {
    border-radius: $input-border-radius;

    &:focus {
      
      ~ [class*="input-group"] {
        
        > .input-group-text {
          border-color: $input-focus-border-color;
        }
      }
    }
  }

  > .form-control-prepended {
    padding-left: $input-padding-x / 2;
    border-top-left-radius: 0 !important;
    border-bottom-left-radius: 0 !important;
    border-left-width: 0;
  }

  > .form-control-appended {
    padding-right: $input-padding-x / 2;
    border-top-right-radius: 0 !important;
    border-bottom-right-radius: 0 !important;
    border-right-width: 0;
  }

  > .input-group-prepend {
    order: -1; // prepend always goes first

    > .input-group-text {
      padding-right: $input-padding-x / 2;
      border-top-left-radius: $input-border-radius;
      border-bottom-left-radius: $input-border-radius;
      border-right-width: 0;
      transition: $input-transition;
    }
  }

  > .input-group-append {

    > .input-group-text {
      padding-left: $input-padding-x / 2;
      border-top-right-radius: $input-border-radius;
      border-bottom-right-radius: $input-border-radius;
      border-left-width: 0;
      transition: $input-transition;
    }
  }
}

.input-group-lg.input-group-merge {

  > .form-control {
    border-radius: $input-border-radius-lg;
  }

  > .form-control-prepended {
    padding-left: $input-padding-x-lg / 2;

  }

  > .form-control-appended {
    padding-right: $input-padding-x-lg / 2;

  }

  > .input-group-prepend {

    > .input-group-text {
      padding-right: $input-padding-x-lg / 2;
      border-top-left-radius: $input-border-radius-lg;
      border-bottom-left-radius: $input-border-radius-lg;
    }
  }

  > .input-group-append {

    > .input-group-text {
      padding-left: $input-padding-x-lg / 2;
      border-top-right-radius: $input-border-radius-lg;
      border-bottom-right-radius: $input-border-radius-lg;
    }
  }
}

.input-group-sm.input-group-merge {

  > .form-control {
    border-radius: $input-border-radius-sm;
  }

  > .form-control-prepended {
    padding-left: $input-padding-x-sm / 2;

  }

  > .form-control-appended {
    padding-right: $input-padding-x-sm / 2;
  }

  > .input-group-prepend {

    > .input-group-text {
      padding-right: $input-padding-x-sm / 2;
      border-top-left-radius: $input-border-radius-sm;
      border-bottom-left-radius: $input-border-radius-sm;
    }
  }

  > .input-group-append {

    > .input-group-text {
      padding-left: $input-padding-x-sm / 2;
      border-top-right-radius: $input-border-radius-sm;
      border-bottom-right-radius: $input-border-radius-sm;
    }
  }
}

.input-group-rounded.input-group-merge {

  > .form-control {
    border-radius: 20rem;
  }

  > .input-group-prepend {

    > .input-group-text {
      border-top-left-radius: 20rem;
      border-bottom-left-radius: 20rem;
    }
  }

  > .input-group-append {

    > .input-group-text {
      border-top-right-radius: 20rem;
      border-bottom-right-radius: 20rem;
    }
  }
}

.input-group-flush {

  > .form-control {
    padding: 0;
    border-width: 0;
  }

  > .input-group-prepend,
  > .input-group-append {

    > .input-group-text {
      padding: 0;
      border-width: 0;
    }
  }
}


// Flatpickr
//
// Flatpickr plugin overrides

.flatpickr-calendar {
  color: $body-color;

  * {
    color: inherit !important;
    fill: currentColor !important;
  }

  .flatpickr-months {
    padding-top: .625rem;
    padding-bottom: .625rem;
  }

  .flatpickr-prev-month,
  .flatpickr-next-month {
    top: .625rem;
  }

  .flatpickr-current-month {
    font-size: 115%;
  }

  .flatpickr-day {
    border-radius: $border-radius;

    &:hover {
      background-color: $light;
    }
  }

  .flatpickr-day.prevMonthDay {
    color: $text-muted !important;
  }

  .flatpickr-day.today {
    border-color: $border-color;
  }

  .flatpickr-day.selected {
    background-color: $primary;
    border-color: $primary;
    color: white !important;
  }

}


// Quill
//
// Quill plugin overrides

.ql-container {
  font-family: $font-family-base;
}

.ql-toolbar {
  @extend .form-control;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

.ql-toolbar + .ql-container {
  margin-top: -$border-width;
}

.ql-toolbar + .ql-container .ql-editor {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.ql-editor {
  @extend .form-control;
  min-height: $line-height-base * $font-size-base * 4;
}

.ql-hidden {
  position: absolute;
  transform: scale(0);
}


// Placeholder

.ql-editor.ql-blank::before {
  top: $input-padding-y; left: $input-padding-x;
  font-style: normal;
  color: $input-placeholder-color;
}

.ql-editor:focus::before {
  display: none;
}


// Toolbar

.ql-formats {
  padding-left: .5rem;
  padding-right: .5rem;

  &:first-child {
    padding-left: 0;
  }
  &:last-child {
    padding-right: 0;
  }
}

.ql-toolbar button {
  padding: 0 .25rem;
  background: none; border: none;
  color: $body-color;
  cursor: pointer;
  transition: $transition-base;

  &:hover {
    color: $primary;
  }

  &:first-child {
    margin-left: -.25rem;
  }
}

.ql-toolbar .ql-active {
  color: $primary;
}

.ql-toolbar button svg {
  height: 1.125rem; width: auto;
}

.ql-toolbar .ql-stroke {
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
  fill: none;
}

.ql-toolbar .ql-thin {
  stroke-width: 1;
}

.ql-toolbar .ql-fill {
  fill: currentColor;
}

.ql-toolbar input.ql-image {
  position: absolute;
  transform: scale(0);
} 


// Tooltip

.ql-tooltip {
  position: absolute;
  display: flex;
  flex-wrap: nowrap;
  width: 18.5rem;
  background-color: $popover-bg;
  border: $popover-border-width solid $popover-border-color;
  border-radius: $popover-border-radius;
  padding: $input-padding-y $input-padding-x;
  margin-top: .6rem; // arrow width
  box-shadow: $popover-box-shadow;

  // Arrow
  
  &:before, &:after {
    content: '';
    position: absolute;
    left: 50%; bottom: 100%;
    transform: translateX(-50%);
  }
  &:before {
    border-bottom: .6rem solid $popover-border-color;
    border-left: .6rem solid transparent;
    border-right: .6rem solid transparent;
  }
  &:after {
    border-bottom: .5rem solid $popover-bg;
    border-left: .5rem solid transparent;
    border-right: .5rem solid transparent;
  }
}

.ql-container .ql-tooltip:hover {
  display: flex !important;
}

.ql-tooltip .ql-preview {
  @extend .btn;
  @extend .btn-sm;
  @extend .btn-link;
  @extend .text-truncate;
  text-align: left;
  width: 100%;
}

.ql-tooltip.ql-editing .ql-preview {
  display: none;
}

.ql-tooltip input {
  @extend .form-control;
  @extend .form-control-sm;
  @extend .form-control-flush;
  display: none;
  width: 100%;
}

.ql-tooltip.ql-editing input {
  display: block;
}


.ql-tooltip .ql-action,
.ql-tooltip .ql-remove {
  margin-left: .25rem;
}

.ql-tooltip .ql-action::before {
  @extend .btn;
  @extend .btn-sm;
  @extend .btn-primary;
  content: 'Edit';
}

.ql-tooltip.ql-editing .ql-action::before {
  content: 'Save';
}

.ql-tooltip .ql-remove::before {
  @extend .btn;
  @extend .btn-sm;
  @extend .btn-white;
  content: 'Remove';
}

.ql-tooltip.ql-editing .ql-remove::before {
  display: none;
}


// Formatting

.ql-editor blockquote {
  @extend .blockquote;
}

.ql-editor img {
  @extend .img-fluid;
}


// Dropzone
//
// Dropzone plugin overrides

.dropzone {
  padding: 0;
  background: none;
  border: $border-width dashed $border-color;
  border-radius: $border-radius;
  color: $text-muted;
  transition: $transition-base;

  &:hover {
    border-color: $text-muted;
    color: $body-color;
  }
}

.dropzone .dz-default {
  margin: 0;
  padding: 5rem 1rem;
  text-align: center;
}


// Select 2
//
// Select 2 plugin overrides